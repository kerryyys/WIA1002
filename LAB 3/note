UML diagram的目的？
The purpose of using UML (Unified Modeling Language) diagram is to provide a visual representation of the system being developed. 
It is a standardized graphical language used in software engineering to model, design, and document software systems. 
UML diagrams allow software developers to visualize the architecture, design, and behavior of a software system.

UML diagrams are used to communicate with stakeholders, such as developers, testers, and project managers. 
They provide a clear understanding of the system's components, their relationships, and their behaviors. 
This helps to identify potential design issues and make design decisions more efficiently. 
UML diagrams also help in the documentation process of the software system, making it easier for new developers to understand and maintain the system. 
Overall, UML diagrams are an essential tool in software engineering to model and design complex software systems.

T3Q1
public enum Dispenser{
Candy(x,x),
Gum(y,y);
Dispenser(String x, double y){
this,x=x;
this.y=y;
}
}
enum是用来define a set of named values that represent a finite set of choices。
可方便我们list同一种类的东西
format就是那样
里面的value要跟着constructor的argument；

T3Q2 - 全部关于Javadoc的使用方法 - 用的意义就是为了让程序员更明白这个是为啥用的，因为comment会很冗长，所以这个更直接更简短 更凸显出目的
@param is a tag used in Javadoc-style comments in Java to document a method's parameters. 
It is used to describe the parameter's purpose and any constraints or requirements on the values that can be passed in. 
The @param tag is followed by the name of the parameter and its description. 
For example, the Javadoc comment for a method with a parameter named name might include the following @param tag:
The @param tag should be placed directly above the parameter it is documenting, inside the Javadoc comment for the method or constructor.
一定要放在method上面不可以method里面，@param后面跟着parameter的名字

The @code tag is a Javadoc tag that is used to indicate that a specific word or phrase should be presented in code font. 
This can be helpful for indicating code fragments, method names, or other programming constructs within documentation.

例子：
/**
 * Returns the sum of two integers.
 * 
 * @param a the first integer
 * @param b the second integer
 * @return the sum of a and b
 */
public int sum(int a, int b);


The /** format is called a documentation comment in Java and is used to generate documentation automatically using tools like Javadoc. 
The /** format for a comment indicates that it is a documentation comment and not just a regular code comment. 
It's important to note that this format is specific to documentation comments and is not required for regular code comments.
