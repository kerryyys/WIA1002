In a class called MinMaxTwoDArray, write two generic methods:
a. First method returns the minimum element in a two-dimensional
array. Below is the method signature:
public static <E extends Comparable<E>> E min(E[][] list)
b. Second method returns the maximum element in a two-dimensional
array. Below is the method signature:
public static <E extends Comparable<E>> E max(E[][] list)
c. Create a test program that creates one instance of generic class of
type Integer called numbers with the elements: {4, 5, 6}, {1, 2, 3}.
Display the minimum and maximum elements using the min and max methods.


public class MinMaxTwoDArray {
    //need start from [0][0] in for loop to ensure all have looped(bcuz it used to indicate position not like 1,6
    public static <E extends Comparable<E>> E min(E[][] list){
        E min=list[0][0];
        for(int i=0;i< list.length;i++){
            for(int j=0;j<list[i].length;j++){
                if(min.compareTo(list[i][j])>0){
                    min=list[i][j];
                }
            }
        }
        return min;
    }
    public static <E extends Comparable<E>> E max(E[][] list){
        E max=list[0][0];
        for(int i=0;i< list.length;i++){
            for(int j=0;j<list[i].length;j++){
                if(max.compareTo(list[i][j])<0){
                    max=list[i][j];
                }
            }
        }
        return max;
    }

    public static void main(String[] args) {
        Integer[][] intarray={{4,5,6},{1,2,3}};
        System.out.println("MIN= "+min(intarray));
        System.out.println("MAX= "+max(intarray));
    }
}




 we use list.length in the first loop because we want to iterate over all the rows of 
 the two-dimensional array, and we need to know the number of rows to do that. 
 Once we are inside the loop, we use list[i].length to get the number of columns in each row, 
 which allows us to iterate over all the elements in that row.
